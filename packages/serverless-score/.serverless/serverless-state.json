{
  "service": {
    "service": "serverless-score",
    "serviceObject": {
      "name": "serverless-score"
    },
    "provider": {
      "stage": "demo",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs10.x",
      "region": "us-east-1",
      "role": "arn:aws:iam::738386057074:role/gle",
      "vpc": {
        "securityGroupIds": [
          "sg-71ba5516"
        ],
        "subnetIds": [
          "subnet-b6ab3e9d",
          "subnet-eb39779c"
        ]
      },
      "deploymentBucket": "sas-gle",
      "timeout": 30,
      "memorySize": 1024,
      "environment": {
        "MAINKEY": "sls/kdk/env",
        "MAINREGION": "us-east-1",
        "PROGRAMURI": "program"
      },
      "deploymentBucketObject": {
        "name": "sas-gle"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AppLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-app"
            }
          },
          "DescribeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-describe"
            }
          },
          "SelectorsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-selectors"
            }
          },
          "ContentsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-contents"
            }
          },
          "DsscoreLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-dsscore"
            }
          },
          "ScenarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-score-demo-scenario"
            }
          },
          "AppLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-app",
              "Handler": "src/app.app",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "AppLogGroup"
            ]
          },
          "AppLambdaVersionjouLZGPfKNI6gJSq3Gl2H0JvC4Q6L0HdxVWYxBffg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AppLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "DescribeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-describe",
              "Handler": "src/dsScore.dsScore",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "DescribeLogGroup"
            ]
          },
          "DescribeLambdaVersionB7gnSj60weAUB6uYF0YyNY1fdyaxUDULHzgXuwUFgTE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DescribeLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "SelectorsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-selectors",
              "Handler": "src/dsScore.dsScore",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "SelectorsLogGroup"
            ]
          },
          "SelectorsLambdaVersioneS9GqmOnUJf43kziqs2n1EZedids7fhMXc1L8BaMRAg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SelectorsLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "ContentsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-contents",
              "Handler": "src/dsScore.dsScore",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "ContentsLogGroup"
            ]
          },
          "ContentsLambdaVersionntzlS1lk6S41WimFIEAZjz4gShFtG2tvkTF2tOuR84": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ContentsLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "DsscoreLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-dsscore",
              "Handler": "src/dsScore.dsScore",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "DsscoreLogGroup"
            ]
          },
          "DsscoreLambdaVersionK7TVBGT1z51H5CxQuDAeCqQYHbPsI2JpAGULqgT5M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DsscoreLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "ScenarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "sas-gle",
                "S3Key": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z/serverless-score.zip"
              },
              "FunctionName": "serverless-score-demo-scenario",
              "Handler": "src/dsScore.dsScore",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::738386057074:role/gle",
              "Runtime": "nodejs10.x",
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "MAINKEY": "sls/kdk/env",
                  "MAINREGION": "us-east-1",
                  "PROGRAMURI": "program"
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-71ba5516"
                ],
                "SubnetIds": [
                  "subnet-b6ab3e9d",
                  "subnet-eb39779c"
                ]
              }
            },
            "DependsOn": [
              "ScenarioLogGroup"
            ]
          },
          "ScenarioLambdaVersionjAEjv59iGie2AAEvpZVmsxmuA6joCapbjOlvuR2lw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ScenarioLambdaFunction"
              },
              "CodeSha256": "scKMWlvnuyOHTo3ZCp09OjTKWmcxrZGfC0+Gf/cd8mw="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "demo-serverless-score",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceApp": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "app",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceDescribe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "describe",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSelectors": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "selectors",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceContents": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "contents",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceScore": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "score",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceScenario": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "scenario",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAppOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceApp"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodDescribeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceDescribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodSelectorsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceSelectors"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodContentsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceContents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodScoreOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodScenarioOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceScenario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAppGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.id": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceApp"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AppLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodDescribePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceDescribe"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DescribeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodSelectorsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSelectors"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SelectorsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodContentsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceContents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ContentsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodScorePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScore"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DsscoreLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodScenarioPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceScenario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ScenarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1574961937529": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "demo"
            },
            "DependsOn": [
              "ApiGatewayMethodAppOptions",
              "ApiGatewayMethodDescribeOptions",
              "ApiGatewayMethodSelectorsOptions",
              "ApiGatewayMethodContentsOptions",
              "ApiGatewayMethodScoreOptions",
              "ApiGatewayMethodScenarioOptions",
              "ApiGatewayMethodAppGet",
              "ApiGatewayMethodDescribePost",
              "ApiGatewayMethodSelectorsPost",
              "ApiGatewayMethodContentsPost",
              "ApiGatewayMethodScorePost",
              "ApiGatewayMethodScenarioPost"
            ]
          },
          "AppLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AppLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DescribeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DescribeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SelectorsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SelectorsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ContentsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ContentsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DsscoreLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DsscoreLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ScenarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ScenarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "sas-gle"
          },
          "AppLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AppLambdaVersionjouLZGPfKNI6gJSq3Gl2H0JvC4Q6L0HdxVWYxBffg"
            }
          },
          "DescribeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DescribeLambdaVersionB7gnSj60weAUB6uYF0YyNY1fdyaxUDULHzgXuwUFgTE"
            }
          },
          "SelectorsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SelectorsLambdaVersioneS9GqmOnUJf43kziqs2n1EZedids7fhMXc1L8BaMRAg"
            }
          },
          "ContentsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ContentsLambdaVersionntzlS1lk6S41WimFIEAZjz4gShFtG2tvkTF2tOuR84"
            }
          },
          "DsscoreLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DsscoreLambdaVersionK7TVBGT1z51H5CxQuDAeCqQYHbPsI2JpAGULqgT5M"
            }
          },
          "ScenarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ScenarioLambdaVersionjAEjv59iGie2AAEvpZVmsxmuA6joCapbjOlvuR2lw"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/demo"
                ]
              ]
            }
          }
        }
      }
    },
    "custom": {
      "role": "arn:aws:iam::738386057074:role/gle",
      "vpc": {
        "$ref": "$[\"service\"][\"provider\"][\"vpc\"]"
      },
      "deploymentBucketName": "sas-gle",
      "environment": {
        "$ref": "$[\"service\"][\"provider\"][\"environment\"]"
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "app": {
        "handler": "src/app.app",
        "events": [
          {
            "http": {
              "path": "app",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "request": {
                "parameters": {
                  "method.request.path.id": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-app",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "describe": {
        "handler": "src/dsScore.dsScore",
        "events": [
          {
            "http": {
              "path": "describe",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-describe",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "selectors": {
        "handler": "src/dsScore.dsScore",
        "events": [
          {
            "http": {
              "path": "selectors",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-selectors",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "contents": {
        "handler": "src/dsScore.dsScore",
        "events": [
          {
            "http": {
              "path": "contents",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-contents",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "dsscore": {
        "handler": "src/dsScore.dsScore",
        "events": [
          {
            "http": {
              "path": "score",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-dsscore",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      },
      "scenario": {
        "handler": "src/dsScore.dsScore",
        "events": [
          {
            "http": {
              "path": "scenario",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "allowCredentials": false,
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ]
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-score-demo-scenario",
        "package": {},
        "memory": 1024,
        "timeout": 30,
        "runtime": "nodejs10.x",
        "vpc": {}
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "C:\\Public\\gen2\\restaf\\packages\\serverless-score\\.serverless\\serverless-score.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-score/demo/1574961999525-2019-11-28T17:26:39.525Z",
    "artifact": "serverless-score.zip"
  }
}